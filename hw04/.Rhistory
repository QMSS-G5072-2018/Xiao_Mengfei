geom_point() + geom_smooth(method = lm) +
labs(title = "The relationship between gdpcap & infmort")
library(knitr)
opts_chunk$set(fig.path="images/")
lm1 <- lm(infmort~gdpcap, data_WDI_clean, subset = ((!is.na(gdpcap)) & (!is.na(infmort))))
library(knitr)
opts_chunk$set(fig.path="images/")
function_names[which(length_names_vector == max(length_names_vector))]
library(knitr)
opts_chunk$set(fig.path="images/")
library(tidyverse)
library(dplyr)
function_names <- names(base_functions) # All the names of the function
library(knitr)
opts_chunk$set(fig.path="images/")
content <- mget(ls("package:base"), inherits = TRUE)
base_functions <- Filter(is.function, content)
library(knitr)
opts_chunk$set(fig.path="images/")
library(tidyverse)
library(dplyr)
function_names <- names(base_functions) # All the names of the function
length_names <- map(function_names, nchar)
length_names_vector <- c()
for(i in 1:length(length_names)){
length_names_vector <- c(length_names_vector,length_names[[i]])
}
library(knitr)
opts_chunk$set(fig.path="images/")
function_names[which(length_names_vector == max(length_names_vector))]
library(knitr)
opts_chunk$set(fig.path="images/")
base_fun_args <- map(base_functions, formals)
num_arguments <- sapply(base_fun_args, length)
function_arguments <- data.frame("function" = names(num_arguments), "number_arguments" = num_arguments)
function_top10 <- function_arguments[order(function_arguments$number_arguments, decreasing = TRUE),][1:10,]
rownames(function_top10) <- c(1:nrow(function_top10))
library(knitr)
opts_chunk$set(fig.path="images/")
max(length_names_vector)
library(knitr)
opts_chunk$set(fig.path="images/")
library(RJSONIO)
library(WDI)
data_WDI <- WDI(country = "all", indicator = c("NY.GDP.PCAP.PP.KD", "SP.DYN.IMRT.IN"),
start = 1960, end = 2017, extra = TRUE, cache = NULL)
library(knitr)
opts_chunk$set(fig.path="images/")
# Preprocess the dataset
colnames(data_WDI)[colnames(data_WDI) == "NY.GDP.PCAP.PP.KD"] <- "gdpcap"
colnames(data_WDI)[colnames(data_WDI) == "SP.DYN.IMRT.IN"] <- "infmort"
data_WDI_clean <- data_WDI %>% filter(data_WDI$region != "Aggregates")
library(knitr)
opts_chunk$set(fig.path="images/")
# Highest and lowest infant mortality rates in 2017
data_2017 <- select(data_WDI_clean, year, country, region, infmort, gdpcap) %>% filter(year == 2017)
infmort_top5 <- select(data_2017, country, infmort, gdpcap) %>%
arrange(desc(infmort)) %>%
head(5)
infmort_last5 <- select(data_2017, country, infmort, gdpcap) %>%
arrange(infmort) %>%
head(5)
infmort_result_1 <- data.frame(infmort_top5, infmort_last5)
infmort_result_2 <- list(highest_5 = as.list(infmort_top5), lowest_5 = as.list(infmort_last5))
library(knitr)
opts_chunk$set(fig.path="images/")
print(infmort_result_1)
library(knitr)
opts_chunk$set(fig.path="images/")
lm1 <- lm(infmort~gdpcap, data_WDI_clean, subset = ((!is.na(gdpcap)) & (!is.na(infmort))))
summary(lm1)
library(knitr)
opts_chunk$set(fig.path="images/")
library(ggplot2)
ggplot(data_WDI_clean, aes(x = gdpcap, y = infmort)) +
geom_point() + geom_smooth(method = lm) +
labs(title = "The relationship between gdpcap & infmort")
library(knitr)
opts_chunk$set(fig.path="images/")
library(knitr)
opts_chunk$set(fig.path="images/")
library(knitr)
opts_chunk$set(fig.path="images/")
library(knitr)
opts_chunk$set(fig.path="images/")
lm1 <- lm(infmort~gdpcap, data_WDI_clean, subset = ((!is.na(gdpcap)) & (!is.na(infmort))))
summary(lm1)
library(knitr)
opts_chunk$set(fig.path="images/")
library(knitr)
opts_chunk$set(fig.path="images/")
library(knitr)
opts_chunk$set(fig.path="images/")
avg_adjusted_added <- mean(differ_R$squared)
library(knitr)
opts_chunk$set(fig.path="images/")
R_Square_square <- data_WDI_clean %>%
split(data_WDI_clean$country) %>%
map(~ lm(infmort~gdpcap + I(gdpcap^2), data = .)) %>%
map(summary) %>%
map_dbl("r.squared") # R-square
library(knitr)
opts_chunk$set(fig.path="images/")
R_Square_square <- data_WDI_clean %>%
split(data_WDI_clean$country) %>%
map(~ lm(infmort~gdpcap + I(gdpcap^2), data = .)) %>%
map(summary) %>%
map_dbl("r.squared") # R-square
library(knitr)
opts_chunk$set(fig.path="images/")
R_Square <- data_WDI_clean %>%
split(data_WDI_clean$country) %>%
map(~ lm(infmort ~ gdpcap, data = .)) %>%
map(summary) %>%
map_dbl("r.squared") # R-square
library(knitr)
opts_chunk$set(fig.path="images/")
library(RJSONIO)
library(WDI)
data_WDI <- WDI(country = "all", indicator = c("NY.GDP.PCAP.PP.KD", "SP.DYN.IMRT.IN"),
start = 1960, end = 2017, extra = TRUE, cache = NULL)
library(knitr)
opts_chunk$set(fig.path="images/")
library(knitr)
opts_chunk$set(fig.path="images/")
library(knitr)
opts_chunk$set(fig.path="images/")
base_fun_args <- map(base_functions, formals)
num_arguments <- sapply(base_fun_args, length)
function_arguments <- data.frame("function" = names(num_arguments), "number_arguments" = num_arguments)
function_top10 <- function_arguments[order(function_arguments$number_arguments, decreasing = TRUE),][1:10,]
rownames(function_top10) <- c(1:nrow(function_top10))
library(knitr)
opts_chunk$set(fig.path="images/")
# Print out top_10
print(function_top10)
library(knitr)
opts_chunk$set(fig.path="images/")
non_argumrnts <- function_arguments[function_arguments$number_arguments == 0,]
nrow(non_argumrnts)
library(knitr)
opts_chunk$set(fig.path="images/")
library(RJSONIO)
library(WDI)
data_WDI <- WDI(country = "all", indicator = c("NY.GDP.PCAP.PP.KD", "SP.DYN.IMRT.IN"),
start = 1960, end = 2017, extra = TRUE, cache = NULL)
library(knitr)
opts_chunk$set(fig.path="images/")
sort(lm1$coefficients[2], decreasing = TRUE)
library(knitr)
opts_chunk$set(fig.path="images/")
sort(lm1$coefficients[2], decreasing = TRUE) %>% head()
View(lm1$coefficients[2])
library(knitr)
opts_chunk$set(fig.path="images/")
sort(lm1$coefficients, decreasing = TRUE)
View(lm_table_country$Coefficient)
library(knitr)
opts_chunk$set(fig.path="images/")
nrow(lm_table_country[lm_table_country$Coefficient > 0
& lm_table_country$P_value < 0.05,])/nrow(lm_table_country)
library(knitr)
opts_chunk$set(fig.path="images/")
R_Square <- data_WDI_clean %>%
split(data_WDI_clean$country) %>%
map(~ lm(infmort ~ gdpcap, data = .)) %>%
map(summary) %>%
map_dbl("r.squared") # R-square
library(knitr)
opts_chunk$set(fig.path="images/")
library(ggplot2)
ggplot(data_WDI_clean, aes(x = gdpcap, y = infmort)) +
geom_point() + geom_smooth(method = lm) +
labs(title = "The relationship between gdpcap & infmort")
library(knitr)
opts_chunk$set(fig.path="images/")
library(knitr)
opts_chunk$set(fig.path="images/")
lm1 <- lm(infmort~gdpcap, data_WDI_clean, subset = ((!is.na(gdpcap)) & (!is.na(infmort))))
summary(lm1)
library(knitr)
opts_chunk$set(fig.path="images/")
arrange(lm1$coefficients, decreasing = TRUE)
library(knitr)
opts_chunk$set(fig.path="images/")
list(lm1$coefficients, decreasing = TRUE)
library(knitr)
opts_chunk$set(fig.path="images/")
R_Square_square <- data_WDI_clean %>%
split(data_WDI_clean$country) %>%
map(~ lm(infmort~gdpcap + I(gdpcap^2), data = .)) %>%
map(summary) %>%
map_dbl("r.squared") # R-square
library(knitr)
opts_chunk$set(fig.path="images/")
content <- mget(ls("package:base"), inherits = TRUE)
base_functions <- Filter(is.function, content)
library(tidyverse)
library(dplyr)
function_names <- names(base_functions) # All the names of the function
length_names <- map(function_names, nchar)
length_names_vector <- c()
for(i in 1:length(length_names)){
length_names_vector <- c(length_names_vector,length_names[[i]])
}
function_names[which(length_names_vector == max(length_names_vector))]
max(length_names_vector)
base_fun_args <- map(base_functions, formals)
num_arguments <- sapply(base_fun_args, length)
function_arguments <- data.frame("function" = names(num_arguments), "number_arguments" = num_arguments)
function_top10 <- function_arguments[order(function_arguments$number_arguments, decreasing = TRUE),][1:10,]
rownames(function_top10) <- c(1:nrow(function_top10))
# Print out top_10
print(function_top10)
non_argumrnts <- function_arguments[function_arguments$number_arguments == 0,]
nrow(non_argumrnts)
library(RJSONIO)
library(WDI)
data_WDI <- WDI(country = "all", indicator = c("NY.GDP.PCAP.PP.KD", "SP.DYN.IMRT.IN"),
start = 1960, end = 2017, extra = TRUE, cache = NULL)
# Preprocess the dataset
colnames(data_WDI)[colnames(data_WDI) == "NY.GDP.PCAP.PP.KD"] <- "gdpcap"
colnames(data_WDI)[colnames(data_WDI) == "SP.DYN.IMRT.IN"] <- "infmort"
data_WDI_clean <- data_WDI %>% filter(data_WDI$region != "Aggregates")
# Highest and lowest infant mortality rates in 2017
data_2017 <- select(data_WDI_clean, year, country, region, infmort, gdpcap) %>% filter(year == 2017)
infmort_top5 <- select(data_2017, country, infmort, gdpcap) %>%
arrange(desc(infmort)) %>%
head(5)
infmort_last5 <- select(data_2017, country, infmort, gdpcap) %>%
arrange(infmort) %>%
head(5)
infmort_result_2 <- list(highest_5 = as.list(infmort_top5), lowest_5 = as.list(infmort_last5))
print(infmort_top5)
print(infmort_last5)
View(infmort_result_2)
lm1 <- lm(infmort~gdpcap, data_WDI_clean, subset = ((!is.na(gdpcap)) & (!is.na(infmort))))
summary(lm1)
library(ggplot2)
ggplot(data_WDI_clean, aes(x = gdpcap, y = infmort)) +
geom_point() + geom_smooth(method = lm) +
labs(title = "The relationship between gdpcap & infmort")
coefs_region <- map(split_region, ~lm(infmort ~ gdpcap, data = .)) %>%
map(~ coef(.)) %>%
map_dbl("gdpcap") %>%
sort()
library(knitr)
opts_chunk$set(fig.path="images/")
R_Square_square <- data_WDI_clean %>%
split(data_WDI_clean$country) %>%
map(~ lm(infmort~gdpcap + I(gdpcap^2), data = .)) %>%
map(summary) %>%
map_dbl("r.squared") # R-square
library(knitr)
opts_chunk$set(fig.path="images/")
R_Square <- data_WDI_clean %>%
split(data_WDI_clean$country) %>%
map(~ lm(infmort ~ gdpcap, data = .)) %>%
map(summary) %>%
map_dbl("r.squared") # R-square
library(knitr)
opts_chunk$set(fig.path="images/")
library(knitr)
opts_chunk$set(fig.path="images/")
R_Square <- data_WDI_clean %>%
split(data_WDI_clean$country) %>%
map(~ lm(infmort ~ gdpcap, data = .)) %>%
map(summary) %>%
map_dbl("r.squared") # R-square
library(knitr)
opts_chunk$set(fig.path="images/")
content <- mget(ls("package:base"), inherits = TRUE)
base_functions <- Filter(is.function, content)
library(tidyverse)
library(dplyr)
function_names <- names(base_functions) # All the names of the function
length_names <- map(function_names, nchar)
length_names_vector <- c()
for(i in 1:length(length_names)){
length_names_vector <- c(length_names_vector,length_names[[i]])
}
function_names[which(length_names_vector == max(length_names_vector))]
max(length_names_vector)
base_fun_args <- map(base_functions, formals)
num_arguments <- sapply(base_fun_args, length)
function_arguments <- data.frame("function" = names(num_arguments), "number_arguments" = num_arguments)
function_top10 <- function_arguments[order(function_arguments$number_arguments, decreasing = TRUE),][1:10,]
rownames(function_top10) <- c(1:nrow(function_top10))
# Print out top_10
print(function_top10)
non_argumrnts <- function_arguments[function_arguments$number_arguments == 0,]
nrow(non_argumrnts)
library(RJSONIO)
library(WDI)
data_WDI <- WDI(country = "all", indicator = c("NY.GDP.PCAP.PP.KD", "SP.DYN.IMRT.IN"),
start = 1960, end = 2017, extra = TRUE, cache = NULL)
# Preprocess the dataset
colnames(data_WDI)[colnames(data_WDI) == "NY.GDP.PCAP.PP.KD"] <- "gdpcap"
colnames(data_WDI)[colnames(data_WDI) == "SP.DYN.IMRT.IN"] <- "infmort"
data_WDI_clean <- data_WDI %>% filter(data_WDI$region != "Aggregates")
# Highest and lowest infant mortality rates in 2017
data_2017 <- select(data_WDI_clean, year, country, region, infmort, gdpcap) %>% filter(year == 2017)
infmort_top5 <- select(data_2017, country, infmort, gdpcap) %>%
arrange(desc(infmort)) %>%
head(5)
infmort_last5 <- select(data_2017, country, infmort, gdpcap) %>%
arrange(infmort) %>%
head(5)
infmort_result_1 <- data.frame(infmort_top5, infmort_last5)
infmort_result_2 <- list(highest_5 = as.list(infmort_top5), lowest_5 = as.list(infmort_last5))
print(infmort_result_1)
print(infmort_top5)
print(infmort_last5)
View(infmort_result_2)
lm1 <- lm(infmort~gdpcap, data_WDI_clean, subset = ((!is.na(gdpcap)) & (!is.na(infmort))))
summary(lm1)
library(ggplot2)
ggplot(data_WDI_clean, aes(x = gdpcap, y = infmort)) +
geom_point() + geom_smooth(method = "lm") +
labs(title = "The relationship between gdpcap & infmort")
# Split the data set
data_WDI_clean <- data_WDI_clean[(!is.na(data_WDI_clean$gdpcap)) & (!is.na(data_WDI_clean$infmort)),]
split_region <- split(data_WDI_clean, data_WDI_clean$region, drop = TRUE)
str(split_region, max.level = 1)
coefs_region <- map(split_region, ~lm(infmort ~ gdpcap, data = .)) %>%
map(~ coef(.)) %>%
map_dbl("gdpcap") %>%
sort()
coefs_region <- data.frame("region" = names(coefs_region), "coefs_region" = coefs_region)
rownames(coefs_region) <- c(1:nrow(coefs_region))
# Print out the table
print(coefs_region)
R_Square <- data_WDI_clean %>%
split(data_WDI_clean$country) %>%
map(~ lm(infmort ~ gdpcap, data = .)) %>%
map(summary) %>%
map_dbl("r.squared") # R-square
lm_country <- data_WDI_clean %>%
split(data_WDI_clean$country) %>%
map(~ lm(infmort~gdpcap, data = .)) %>%
map(summary)
coef_country <- sapply(lm_country, function(x) x$coefficients[2])
pvalue_country <- sapply(lm_country, function(x) x$coefficients[8])
lm_table_country <- data.frame("Country" = names(R_Square),
"R_squared" = R_Square,
"Coefficient" = coef_country,
"P_value" = pvalue_country)
lm_table_country <- lm_table_country[!is.na(lm_table_country$Coefficient),]
nrow(lm_table_country[lm_table_country$Coefficient > 0
& lm_table_country$P_value < 0.05,])/nrow(lm_table_country)
hist(coef_country)
differs <- abs(lm_table_country$Coefficient - lm1$coefficients[2])
lm_table_country[which(differs == max(differs, na.rm = TRUE)),]
R_Square_square <- data_WDI_clean %>%
split(data_WDI_clean$country) %>%
map(~ lm(infmort~gdpcap + I(gdpcap^2), data = .)) %>%
map(summary) %>%
map_dbl("r.squared") # R-square
lm_table_country_2 <- data.frame("Country" = names(R_Square_square),
"R.squared" = R_Square_square)
lm_table_country_2 <- lm_table_country_2[!is.na(lm_table_country_2$R.squared),]
# Merge 2 tables
differs_R <- merge(x = lm_table_country, y = lm_table_country_2,
by.x = "Country", by.y = "Country")
names(differs_R)[c(2,5)] <- c("no_squared","squared")
plot(differs_R$no_squared, differs_R$squared)
library(knitr)
opts_chunk$set(fig.path="images/")
content <- mget(ls("package:base"), inherits = TRUE)
base_functions <- Filter(is.function, content)
library(tidyverse)
library(dplyr)
function_names <- names(base_functions) # All the names of the function
length_names <- map(function_names, nchar)
length_names_vector <- c()
for(i in 1:length(length_names)){
length_names_vector <- c(length_names_vector,length_names[[i]])
}
function_names[which(length_names_vector == max(length_names_vector))]
max(length_names_vector)
base_fun_args <- map(base_functions, formals)
num_arguments <- sapply(base_fun_args, length)
function_arguments <- data.frame("function" = names(num_arguments), "number_arguments" = num_arguments)
function_top10 <- function_arguments[order(function_arguments$number_arguments, decreasing = TRUE),][1:10,]
rownames(function_top10) <- c(1:nrow(function_top10))
# Print out top_10
print(function_top10)
non_argumrnts <- function_arguments[function_arguments$number_arguments == 0,]
nrow(non_argumrnts)
library(RJSONIO)
library(WDI)
data_WDI <- WDI(country = "all", indicator = c("NY.GDP.PCAP.PP.KD", "SP.DYN.IMRT.IN"),
start = 1960, end = 2017, extra = TRUE, cache = NULL)
# Preprocess the dataset
colnames(data_WDI)[colnames(data_WDI) == "NY.GDP.PCAP.PP.KD"] <- "gdpcap"
colnames(data_WDI)[colnames(data_WDI) == "SP.DYN.IMRT.IN"] <- "infmort"
data_WDI_clean <- data_WDI %>% filter(data_WDI$region != "Aggregates")
# Highest and lowest infant mortality rates in 2017
data_2017 <- select(data_WDI_clean, year, country, region, infmort, gdpcap) %>% filter(year == 2017)
infmort_top5 <- select(data_2017, country, infmort, gdpcap) %>%
arrange(desc(infmort)) %>%
head(5)
infmort_last5 <- select(data_2017, country, infmort, gdpcap) %>%
arrange(infmort) %>%
head(5)
infmort_result_2 <- list(highest_5 = as.list(infmort_top5), lowest_5 = as.list(infmort_last5))
print(infmort_top5)
print(infmort_last5)
View(infmort_result_2)
lm1 <- lm(infmort~gdpcap, data_WDI_clean, subset = ((!is.na(gdpcap)) & (!is.na(infmort))))
summary(lm1)
library(ggplot2)
ggplot(data_WDI_clean, aes(x = gdpcap, y = infmort)) +
geom_point() + geom_smooth(method = lm) +
labs(title = "The relationship between gdpcap & infmort")
coefs_region <- map(split_region, ~lm(infmort ~ gdpcap, data = .)) %>%
map(~ coef(.)) %>%
map_dbl("gdpcap") %>%
sort()
library(knitr)
opts_chunk$set(fig.path="images/")
coefs_region <- map(split_region, ~lm(infmort ~ gdpcap, data = .)) %>%
map(~ coef(.)) %>%
map_dbl("gdpcap") %>%
sort()
library(knitr)
opts_chunk$set(fig.path="images/")
lm1 <- lm(infmort~gdpcap, data_WDI_clean, subset = ((!is.na(gdpcap)) & (!is.na(infmort))))
summary(lm1)
library(knitr)
opts_chunk$set(fig.path="images/")
library(ggplot2)
ggplot(data_WDI_clean, aes(x = gdpcap, y = infmort)) +
geom_point() + geom_smooth(method = lm) +
labs(title = "The relationship between gdpcap & infmort")
library(knitr)
opts_chunk$set(fig.path="images/")
library(knitr)
opts_chunk$set(fig.path="images/")
print(infmort_last5)
library(knitr)
opts_chunk$set(fig.path="images/")
# Split the data set
data_WDI_clean <- data_WDI_clean[(!is.na(data_WDI_clean$gdpcap)) & (!is.na(data_WDI_clean$infmort)),]
split_region <- split(data_WDI_clean, data_WDI_clean$region, drop = TRUE)
str(split_region, max.level = 1)
library(knitr)
opts_chunk$set(fig.path="images/")
coefs_region <- map(split_region, ~lm(infmort ~ gdpcap, data = .)) %>%
map(~ coef(.)) %>%
map_dbl("gdpcap") %>%
sort()
coefs_region <- data.frame("region" = names(coefs_region), "coefs_region" = coefs_region)
rownames(coefs_region) <- c(1:nrow(coefs_region))
library(knitr)
opts_chunk$set(fig.path="images/")
# Print out the table
print(coefs_region)
library(knitr)
opts_chunk$set(fig.path="images/")
R_Square <- data_WDI_clean %>%
split(data_WDI_clean$country) %>%
map(~ lm(infmort ~ gdpcap, data = .)) %>%
map(summary) %>%
map_dbl("r.squared") # R-square
lm_country <- data_WDI_clean %>%
split(data_WDI_clean$country) %>%
map(~ lm(infmort~gdpcap, data = .)) %>%
map(summary)
coef_country <- sapply(lm_country, function(x) x$coefficients[2])
pvalue_country <- sapply(lm_country, function(x) x$coefficients[8])
lm_table_country <- data.frame("Country" = names(R_Square),
"R_squared" = R_Square,
"Coefficient" = coef_country,
"P_value" = pvalue_country)
lm_table_country <- lm_table_country[!is.na(lm_table_country$Coefficient),]
library(knitr)
opts_chunk$set(fig.path="images/")
nrow(lm_table_country[lm_table_country$Coefficient > 0
& lm_table_country$P_value < 0.05,])/nrow(lm_table_country)
library(knitr)
opts_chunk$set(fig.path="images/")
hist(coef_country, binwidth = 0.01)
library(knitr)
opts_chunk$set(fig.path="images/")
hist(coef_country)
library(knitr)
opts_chunk$set(fig.path="images/")
R_Square_square <- data_WDI_clean %>%
split(data_WDI_clean$country) %>%
map(~ lm(infmort~gdpcap + I(gdpcap^2), data = .)) %>%
map(summary) %>%
map_dbl("r.squared") # R-square
lm_table_country_2 <- data.frame("Country" = names(R_Square_square),
"R.squared" = R_Square_square)
lm_table_country_2 <- lm_table_country_2[!is.na(lm_table_country_2$R.squared),]
# Merge 2 tables
differ_R <- merge(x = lm_table_country, y = lm_table_country_2,
by.x = "Country", by.y = "Country")
names(differ_R)[c(2,5)] <- c("no_squared","squared")
differ_R$differ <- differ_R$squared - differ_R$no_squared
plot(differ_R$no_squared, differ_R$squared)
library(knitr)
opts_chunk$set(fig.path="images/")
avg_adjusted_added <- mean(differ_R$squared)
avg_adjusted_no_added <- mean(differ_R$no_squared)
difference <- (avg_adjusted_added - avg_adjusted_no_added)
difference
library(knitr)
opts_chunk$set(fig.path="images/")
avg_adjusted_added <- mean(differ_R$squared)
avg_adjusted_no_added <- mean(differ_R$no_squared)
